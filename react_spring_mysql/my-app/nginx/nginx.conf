user nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    sendfile on;
    keepalive_timeout 65;

    # 변수로 정한다 backend 요청이오면 backend:8080으로 간다.
    # backend = dockercompose의 서비스 명 -> dns에 등록된 ip주소로 할당
    # 실제로는 http://172.10.1.1:8080/api/products 이렇게 들어감
    # 근데 rewrite해서 http://172.10.1.1:8080/products 로 들어감
    upstream backend { 
        server backend:8080;
    }

    server {
        listen 80;
        # server_name metacoding.site www.metacoding.site; -> 도메인 설정

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;

            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
            
            proxy_set_header X-NginX-Proxy true;
        }

        location /api/ {
            # backend 주소를 명확히 찾을 수 없음 처음에는 dockercompose로 하니 
            # 그래서 upstream을 찾음 
            proxy_pass http://backend;
            rewrite ^/api(/.*)$ $1 break; # /api 삭제
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';

            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;

         }
    }
}